# Generated by Django 4.2.15 on 2025-09-07 22:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='Espaço Vital', max_length=100, verbose_name='Nome do Site')),
                ('site_description', models.TextField(default='Conectando você ao cuidado terapêutico que transforma', verbose_name='Descrição do Site')),
                ('contact_email', models.EmailField(default='contato@espacovital.com.br', max_length=254, verbose_name='E-mail de Contato')),
                ('contact_phone', models.CharField(default='+55 (21) 99999-9999', max_length=20, verbose_name='Telefone de Contato')),
                ('maintenance_mode', models.BooleanField(default=False, help_text='Ativa o modo de manutenção do site', verbose_name='Modo Manutenção')),
                ('maintenance_message', models.TextField(blank=True, help_text='Mensagem exibida durante a manutenção', verbose_name='Mensagem de Manutenção')),
                ('google_analytics_id', models.CharField(blank=True, help_text='ID do Google Analytics (ex: GA-XXXXXXXXX)', max_length=20, verbose_name='Google Analytics ID')),
                ('facebook_pixel_id', models.CharField(blank=True, help_text='ID do Facebook Pixel', max_length=20, verbose_name='Facebook Pixel ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Configuração do Site',
                'verbose_name_plural': 'Configurações do Site',
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('email', models.EmailField(help_text='E-mail para receber novidades', max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail')),
                ('name', models.CharField(blank=True, help_text='Nome do inscrito (opcional)', max_length=100, verbose_name='Nome')),
                ('is_active', models.BooleanField(default=True, help_text='Recebendo newsletter', verbose_name='Ativo')),
                ('confirmed_at', models.DateTimeField(blank=True, help_text='Data de confirmação do e-mail', null=True, verbose_name='Confirmado em')),
                ('unsubscribed_at', models.DateTimeField(blank=True, help_text='Data do cancelamento', null=True, verbose_name='Cancelado em')),
                ('source', models.CharField(default='website', help_text='Onde se inscreveu', max_length=50, verbose_name='Origem')),
            ],
            options={
                'verbose_name': 'Newsletter',
                'verbose_name_plural': 'Newsletter',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['is_active', 'confirmed_at'], name='core_newsle_is_acti_d6c799_idx')],
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('question', models.CharField(help_text='Pergunta frequente', max_length=200, verbose_name='Pergunta')),
                ('answer', models.TextField(help_text='Resposta detalhada', verbose_name='Resposta')),
                ('category', models.CharField(choices=[('general', 'Geral'), ('therapists', 'Para Terapeutas'), ('clients', 'Para Clientes'), ('spaces', 'Espaços Terapêuticos'), ('payments', 'Pagamentos'), ('technical', 'Técnico')], default='general', help_text='Categoria da pergunta', max_length=20, verbose_name='Categoria')),
                ('order', models.PositiveIntegerField(default=0, help_text='Ordem de exibição', verbose_name='Ordem')),
                ('views_count', models.PositiveIntegerField(default=0, help_text='Número de visualizações', verbose_name='Visualizações')),
                ('helpful_count', models.PositiveIntegerField(default=0, help_text='Quantas pessoas acharam útil', verbose_name='Útil')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQs',
                'ordering': ['category', 'order', 'question'],
                'indexes': [models.Index(fields=['category', 'is_active'], name='core_faq_categor_181b73_idx'), models.Index(fields=['order'], name='core_faq_order_45ee6f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro', verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data e hora da última atualização', verbose_name='Atualizado em')),
                ('is_active', models.BooleanField(default=True, help_text='Indica se o registro está ativo no sistema', verbose_name='Ativo')),
                ('name', models.CharField(help_text='Nome completo do remetente', max_length=100, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nome')),
                ('email', models.EmailField(help_text='E-mail para resposta', max_length=254, validators=[django.core.validators.EmailValidator()], verbose_name='E-mail')),
                ('phone', models.CharField(blank=True, help_text='Telefone para contato (opcional)', max_length=20, verbose_name='Telefone')),
                ('subject', models.CharField(choices=[('general', 'Informações Gerais'), ('therapist', 'Sou Terapeuta'), ('space', 'Tenho um Espaço'), ('partnership', 'Parceria'), ('support', 'Suporte Técnico'), ('complaint', 'Reclamação'), ('suggestion', 'Sugestão')], default='general', help_text='Tipo da mensagem', max_length=20, verbose_name='Assunto')),
                ('message', models.TextField(help_text='Descrição detalhada da mensagem', validators=[django.core.validators.MinLengthValidator(10)], verbose_name='Mensagem')),
                ('status', models.CharField(choices=[('pending', 'Pendente'), ('in_progress', 'Em Andamento'), ('resolved', 'Resolvido'), ('closed', 'Fechado')], default='pending', help_text='Status atual da mensagem', max_length=20, verbose_name='Status')),
                ('responded_at', models.DateTimeField(blank=True, help_text='Data e hora da resposta', null=True, verbose_name='Respondido em')),
                ('internal_notes', models.TextField(blank=True, help_text='Anotações internas da equipe', verbose_name='Notas internas')),
                ('responded_by', models.ForeignKey(blank=True, help_text='Usuário que respondeu a mensagem', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Respondido por')),
            ],
            options={
                'verbose_name': 'Contato',
                'verbose_name_plural': 'Contatos',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'created_at'], name='core_contac_status_d224c5_idx'), models.Index(fields=['subject', 'status'], name='core_contac_subject_13e588_idx')],
            },
        ),
    ]
